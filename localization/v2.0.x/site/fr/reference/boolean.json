{"codeList":["Expr = LogicalExpr | NIL\n\nLogicalExpr = LogicalExpr BinaryLogicalOp LogicalExpr \n              | UnaryLogicalOp LogicalExpr\n              | \"(\" LogicalExpr \")\"\n              | SingleExpr;\n\nBinaryLogicalOp = \"&&\" | \"and\" | \"||\" | \"or\";\n\nUnaryLogicalOp = \"not\";\n\nSingleExpr = TermExpr | CompareExpr;\n\nTermExpr = IDENTIFIER \"in\" ConstantArray;\n\nConstant = INTEGER | FLOAT\n\nConstantExpr = Constant\n               | ConstantExpr BinaryArithOp ConstantExpr\n               | UnaryArithOp ConstantExpr;\n                                                          \nConstantArray = \"[\" ConstantExpr { \",\" ConstantExpr } \"]\";\n\nUnaryArithOp = \"+\" | \"-\"\n\nBinaryArithOp = \"+\" | \"-\" | \"*\" | \"/\" | \"%\" | \"**\";\n\nCompareExpr = IDENTIFIER CmpOp IDENTIFIER\n              | IDENTIFIER CmpOp ConstantExpr\n              | ConstantExpr CmpOp IDENTIFIER\n              | ConstantExpr CmpOpRestricted IDENTIFIER CmpOpRestricted ConstantExpr;\n\nCmpOpRestricted = \"<\" | \"<=\";\n\nCmpOp = \">\" | \">=\" | \"<\" | \"<=\" | \"==\"| \"!=\";\n","\"int64 > 0\"\n","\"0 < int64 < 400\"\n","\"500 <= int64 < 1000\"\n","\"(int64 > 0 && int64 < 400) or (int64 > 500 && int64 < 1000)\"\n","\"int64 not in [1, 2, 3]\"\n","\"int64 in [1, 2, 3] and float != 2\"\n","\"int64 == 0 || int64 == 1 || int64 == 2\"\n","\"200+300 < int64 <= 500+500\"\n"],"headingContent":"","anchorList":[{"label":"Boolean Expression Rules","href":"Boolean-Expression-Rules","type":1,"isActive":false},{"label":"Overview","href":"Overview","type":2,"isActive":false},{"label":"Operators","href":"Operators","type":2,"isActive":false},{"label":"Operator precedence and associativity","href":"Operator-precedence-and-associativity","type":2,"isActive":false},{"label":"Usage","href":"Usage","type":2,"isActive":false}]}