{"codeList":["from pymilvus import Collection\ncollection = Collection(\"book\")      # Get an existing collection.\ncollection.load([\"novel\"])\n\n# Or you can load a partition with the partition as an object\nfrom pymilvus import Partition\npartition = Partition(\"novel\")       # Get an existing partition.\npartition.load()\n","await milvusClient.partitionManager.loadPartitions({\n  collection_name: \"book\",\n  partition_names: [\"novel\"],\n});\n","err := milvusClient.LoadPartitions(\n  context.Background(),   // ctx\n  \"book\",                 // CollectionName\n  []string{\"novel\"},      // partitionNames\n  false                   // async\n)\nif err != nil {\n  log.Fatal(\"failed to load partitions:\", err.Error())\n}\n","milvusClient.loadPartitions(\n  LoadPartitionsParam.newBuilder()\n          .withCollectionName(\"book\")\n          .withPartitionNames([\"novel\"])\n          .build()\n);\n","load -c book -p novel\n"],"headingContent":"","anchorList":[{"label":"Load a Partition","href":"Load-a-Partition","type":1,"isActive":false},{"label":"Constraints","href":"Constraints","type":2,"isActive":false},{"label":"What's next","href":"Whats-next","type":2,"isActive":false}]}