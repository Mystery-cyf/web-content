{"codeList":["from pymilvus import MilvusClient\n\nclient = MilvusClient(\n    collection_name=\"qux\",\n    uri=\"http://localhost:19530\",\n    vector_field=\"float_vector\", \n    # pk_field= \"id\", # If you wanted to provide your own PK\n    overwrite=True,\n)\n","data = [\n    {\n        \"float_vector\": [1,2,3],\n        \"id\": 1,\n        \"text\": \"foo\"\n    },\n    {\n        \"float_vector\": [4,5,6],\n        \"id\": 2,\n        \"text\": \"bar\"\n    },\n    {\n        \"float_vector\": [7,8,9],\n        \"id\": 3,\n        \"text\": \"baz\"\n    }\n]\nclient.insert_data(data)\n","res = client.search_data(\n    data = [[1,3,5], [7,8,9]],\n    top_k = 2,\n)\n# [[\n#     {'data': {'id': 1, 'internal_pk_4537': 441340318978146436, 'text': 'foo'}, 'score': 5.0},\n#     {'data': {'id': 2, 'internal_pk_4537': 441340318978146437, 'text': 'bar'}, 'score': 14.0}\n# ],\n# [\n#     {'data': {'id': 3, 'internal_pk_4537': 441340318978146438, 'text': 'baz'}, 'score': 0.0},\n#     {'data': {'id': 2, 'internal_pk_4537': 441340318978146437, 'text': 'bar'}, 'score': 27.0}\n# ]]\n","from pymilvus import MilvusClient\n\n\nclient = MilvusClient(\n    collection_name=\"qux\",\n    uri=\"http://localhost:19530\",\n    vector_field=\"float_vector\",\n    partitions = [\"zaz\"],\n    overwrite=True,\n)\n\ndata = [\n    {\n        \"float_vector\": [1,2,3],\n        \"id\": 1,\n        \"text\": \"foo\"\n    },\n]\nclient.insert_data(data, partition=\"zaz\")\n\nclient.add_partitions([\"zoo\"])\n\ndata = [\n    {\n        \"float_vector\": [4,5,6],\n        \"id\": 2,\n        \"text\": \"bar\"\n    },\n]\nclient.insert_data(data, partition=\"zoo\")\n\nres = client.search_data(\n    data = [1,3,5],\n    top_k = 2,\n)\n\n# [[\n#     {'data': {'id': 1, 'internal_pk_3bd4': 441363276234227849, 'text': 'foo'}, 'score': 5.0},\n#     {'data': {'id': 2, 'internal_pk_3bd4': 441363276234227866, 'text': 'bar'}, 'score': 14.0}\n# ]]\n\n\nres = client.search_data(\n    data = [1,3,5],\n    top_k = 2,\n    partitions=[\"zaz\"]\n)\n\n# [[\n#     {'data': {'id': 1, 'internal_pk_3bd4': 441363276234227849, 'text': 'foo'}, 'score': 5.0}\n# ]]\n\nres = client.search_data(\n    data = [1,3,5],\n    top_k = 2,\n    partitions=[\"zoo\"]\n)\n\n# [[\n#     {'data': {'id': 2, 'internal_pk_3bd4': 441363276234227866, 'text': 'bar'}, 'score': 14.0}\n# ]]\n","from pymilvus import MilvusClient\n\nclient = MilvusClient(\n    collection_name=\"qux\",\n    uri=\"http://localhost:19530\",\n    vector_field=\"float_vector\", \n    # pk_field= \"id\", # If you wanted to provide your own PK\n    overwrite=True,\n)\n\ndata = [\n    {\n        \"float_vector\": [1,2,3],\n        \"id\": 1,\n        \"text\": \"foo\"\n    },\n    {\n        \"float_vector\": [4,5,6],\n        \"id\": 2,\n        \"text\": \"bar\"\n    },\n    {\n        \"float_vector\": [7,8,9],\n        \"id\": 3,\n        \"text\": \"baz\"\n    }\n]\nclient.insert_data(data)\n\nres = client.search_data(\n    data = [1,3,5],\n    top_k = 2,\n    filter_expression = \"id > 1\"\n)\n\n# [[\n#     {'score': 14.0, 'data': {'id': 2, 'text': 'bar', 'internal_pk_5465': 441363276234227922}},\n#     {'score': 77.0, 'data': {'id': 3, 'text': 'baz', 'internal_pk_5465': 441363276234227923}}\n# ]]\n\nres = client.query_data(\n    filter_expression = \"id == 1\"\n)\n\n# [\n#   {'id': 1, 'text': 'foo', 'internal_pk_5465': 441363276234227921}\n# ]\n","from pymilvus import MilvusClient\n\nclient = MilvusClient(\n    collection_name=\"qux\",\n    uri=\"http://localhost:19530\",\n    vector_field=\"float_vector\", \n    pk_field= \"text\", \n    overwrite=True,\n)\n\ndata = [\n    {\n        \"float_vector\": [1,2,3],\n        \"id\": 1,\n        \"text\": \"foo\"\n    },\n    {\n        \"float_vector\": [4,5,6],\n        \"id\": 2,\n        \"text\": \"bar\"\n    },\n    {\n        \"float_vector\": [7,8,9],\n        \"id\": 3,\n        \"text\": \"baz\"\n    }\n]\n\nclient.insert_data(data)\n\nres = client.query_data(\n    filter_expression = \"id == 1\"\n)\n\n# [\n#   {'id': 1, 'text': 'foo'}\n# ]\n\nres = client.get_vectors_by_pk(pks = res[0][\"text\"])\n\n# [\n#     {'float_vector': [1.0, 2.0, 3.0], 'text': 'foo'}\n# ]\n\nclient.delete_by_pk(pks = res[0][\"text\"])\n\nres = client.query_data(\n    filter_expression = \"id == 1\"\n)\n\n# []\n"],"headingContent":"","anchorList":[{"label":"Use the MilvusClient","href":"Use-the-MilvusClient","type":1,"isActive":false},{"label":"Basics","href":"Basics","type":2,"isActive":false},{"label":"Advanced","href":"Advanced","type":2,"isActive":false}]}