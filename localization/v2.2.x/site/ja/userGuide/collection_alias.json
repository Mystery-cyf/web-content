{"codeList":["from pymilvus import utility\nutility.create_alias(\n  collection_name = \"book\",\n  alias = \"publication\"\n)\n","await milvusClient.createAlias({\n  collection_name: \"book\",\n  alias: \"publication\",\n});\n","// This function is under active development on the GO client.\n","milvusClient.createAlias(\n  CreateAliasParam.newBuilder()\n    .withCollectionName(\"book\")\n    .withAlias(\"publication\")\n    .build()\n);\n","await milvusClient.CreateAliasAsync(\"book\", \"publication\");\n","from pymilvus import utility\nutility.drop_alias(alias = \"publication\")\n","await milvusClient.dropAlias({\n  alias: \"publication\",\n});\n","client.DropAlias(context.Background(), \"publication\")\n","milvusClient.dropAlias(\n  DropAliasParam.newBuilder()\n    .withAlias(\"publication\")\n    .build()\n);\n","await milvusClient.DropAliasAsync(\"publication\");\n","from pymilvus import utility\nutility.alter_alias(\n  collection_name = \"book\",\n  alias = \"publication\"\n)\n","await milvusClient.alterAlias({\n  collection_name: \"book\",\n  alias: \"publication\",\n});\n","client.AlterAlias(context.Background(), \"book\", \"publication\")\n","milvusClient.alterAlias(\n  AlterAliasParam.newBuilder()\n    .withCollectionName(\"book\")\n    .withAlias(\"publication\")\n    .build()\n);\n","await milvusClient.AlterAliasAsync(\"book\", \"publication\");\n"],"headingContent":"","anchorList":[{"label":"Collection Alias","href":"Collection-Alias","type":1,"isActive":false},{"label":"Create a collection alias","href":"Create-a-collection-alias","type":2,"isActive":false},{"label":"Drop a collection alias","href":"Drop-a-collection-alias","type":2,"isActive":false},{"label":"Alter a collection alias","href":"Alter-a-collection-alias","type":2,"isActive":false},{"label":"Limits","href":"Limits","type":2,"isActive":false},{"label":"What's next","href":"Whats-next","type":2,"isActive":false}]}