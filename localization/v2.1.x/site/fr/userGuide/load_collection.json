{"codeList":["from pymilvus import Collection\ncollection = Collection(\"book\")      # Get an existing collection.\ncollection.load(replica_number=2)\n","await milvusClient.collectionManager.loadCollection({\n  collection_name: \"book\",\n});\n","err := milvusClient.LoadCollection(\n  context.Background(),   // ctx\n  \"book\",                 // CollectionName\n  false                   // async\n)\nif err != nil {\n  log.Fatal(\"failed to load collection:\", err.Error())\n}\n","milvusClient.loadCollection(\n  LoadCollectionParam.newBuilder()\n    .withCollectionName(\"book\")\n    .build()\n);\n","load -c book\n","curl -X 'POST' \\\n  'http://localhost:9091/api/v1/collection/load' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"collection_name\": \"book\"\n  }'\n","{}\n","from pymilvus import Collection\ncollection = Collection(\"book\")      # Get an existing collection.\ncollection.load(replica_number=2)    # Load collection as 2 replicas\nresult = collection.get_replicas()\nprint(result)\n","Replica groups:\n- Group: <group_id:435309823872729305>, <group_nodes:(21, 20)>, <shards:[Shard: <channel_name:milvus-zong-rootcoord-dml_27_435367661874184193v0>, <shard_leader:21>, <shard_nodes:[21]>, Shard: <channel_name:milvus-zong-rootcoord-dml_28_435367661874184193v1>, <shard_leader:20>, <shard_nodes:[20, 21]>]>\n- Group: <group_id:435309823872729304>, <group_nodes:(25,)>, <shards:[Shard: <channel_name:milvus-zong-rootcoord-dml_28_435367661874184193v1>, <shard_leader:25>, <shard_nodes:[25]>, Shard: <channel_name:milvus-zong-rootcoord-dml_27_435367661874184193v0>, <shard_leader:25>, <shard_nodes:[25]>]>\n"],"headingContent":"","anchorList":[{"label":"Load a Collection","href":"Load-a-Collection","type":1,"isActive":false},{"label":"Get replica information","href":"Get-replica-information","type":2,"isActive":false},{"label":"Constraints","href":"Constraints","type":2,"isActive":false},{"label":"What's next","href":"Whats-next","type":2,"isActive":false}]}