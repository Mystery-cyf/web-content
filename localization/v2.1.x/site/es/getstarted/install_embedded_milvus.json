{"codeList":["$ python3 -m pip install milvus\n","$ python3 -m pip install milvus==2.1.0\n","$ sudo mkdir -p /var/bin/e-milvus\n$ sudo chmod -R 777 /var/bin/e-milvus\n","$ python3\nPython 3.9.10 (main, Jan 15 2022, 11:40:53)\n[Clang 13.0.0 (clang-1300.0.29.3)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import milvus\n--- if you are running Milvus for the first time, type milvus.before() for pre-run instructions ---\n--- otherwise, type milvus.start() ---\n>>>\n>>> milvus.before()\nplease do the following if you have not already done so:\n1. install required dependencies: bash /var/bin/e-milvus/lib/install_deps.sh\n2. (Linux system only) export LD_PRELOAD=/Users/yuchengao/Documents/GitHub/soothing-rain/embd-milvus/milvus/bin/embd-milvus.so\n3. (on Linux systems) export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib:/usr/local/lib:/var/bin/e-milvus/lib/\n   (on MacOS systems) export DYLD_FALLBACK_LIBRARY_PATH=DYLD_FALLBACK_LIBRARY_PATH:/usr/lib:/usr/local/lib:/var/bin/e-milvus/lib/\n>>>\n","# exit() python interactive mode first\n# Note that this must be done AFTER `import milvus`\n$ bash /var/bin/e-milvus/lib/install_deps.sh\n","# exit() python interactive mode first\n# Note that this must be done AFTER `import milvus`\n$ (Linux system only) export LD_PRELOAD=/Users/yuchengao/Documents/GitHub/soothing-rain/embd-milvus/milvus/bin/embd-milvus.so\n(on Linux systems) $ export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib:/usr/local/lib:/var/bin/e-milvus/lib/\n(on MacOS systems) $ export DYLD_FALLBACK_LIBRARY_PATH=DYLD_FALLBACK_LIBRARY_PATH:/usr/lib:/usr/local/lib:/var/bin/e-milvus/lib/\n","$ python3\nPython 3.9.10 (main, Jan 15 2022, 11:40:53)\n[Clang 13.0.0 (clang-1300.0.29.3)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import milvus\n--- if you are running Milvus for the first time, type milvus.before() for pre-run instructions ---\n--- otherwise, type milvus.start() ---\n>>>\n>>> milvus.start()\n---Milvus Proxy successfully initialized and ready to serve!---\n>>>\n","# Download hello_milvus script\n$ wget https://raw.githubusercontent.com/milvus-io/pymilvus/v2.1.0/examples/hello_milvus.py\n# Run Hello Milvus \n$ python3 hello_milvus.py\n","$ python3\nPython 3.9.10 (main, Jan 15 2022, 11:40:53)\n[Clang 13.0.0 (clang-1300.0.29.3)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import milvus\n--- if you are running Milvus for the first time, type milvus.before() for pre-run instructions ---\n--- otherwise, type milvus.start() ---\n>>>\n>>> milvus.start()\n---Milvus Proxy successfully initialized and ready to serve!---\n>>>\n>>>\n>>> import random\n>>> from pymilvus import (\n...     connections,\n...     utility,\n...     FieldSchema, CollectionSchema, DataType,\n...     Collection,\n... )\n>>> connections.connect(\"default\", host=\"localhost\", port=\"19530\")\n>>> has = utility.has_collection(\"hello_milvus\")\n>>> fields = [\n...     FieldSchema(name=\"pk\", dtype=DataType.INT64, is_primary=True, auto_id=False),\n...     FieldSchema(name=\"embeddings\", dtype=DataType.FLOAT_VECTOR, dim=8)\n... ]\n>>> schema = CollectionSchema(fields, \"hello_milvus is the simplest demo to introduce the APIs\")\n>>> hello_milvus = Collection(\"hello_milvus\", schema, consistency_level=\"Strong\")\n>>> num_entities = 3000\n>>> entities = [\n...     [i for i in range(num_entities)], # provide the pk field because `auto_id` is set to False\n...     [[random.random() for _ in range(8)] for _ in range(num_entities)],  # field embeddings\n... ]\n>>> insert_result = hello_milvus.insert(entities)\n>>> index = {\n...     \"index_type\": \"IVF_FLAT\",\n...     \"metric_type\": \"L2\",\n...     \"params\": {\"nlist\": 128},\n... }\n>>> hello_milvus.create_index(\"embeddings\", index)\n>>> hello_milvus.load()\n>>> vectors_to_search = entities[-1][-2:]\n>>> search_params = {\n...     \"metric_type\": \"l2\",\n...     \"params\": {\"nprobe\": 10},\n... }\n>>> result = hello_milvus.search(vectors_to_search, \"embeddings\", search_params, limit=3)\n>>> for hits in result:\n...     for hit in hits:\n...         print(f\"hit: {hit}\")\n...\nhit: (distance: 0.0, id: 2998)\nhit: (distance: 0.1088758111000061, id: 2345)\nhit: (distance: 0.12012234330177307, id: 1172)\nhit: (distance: 0.0, id: 2999)\nhit: (distance: 0.0297045037150383, id: 2000)\nhit: (distance: 0.16927233338356018, id: 560)\n>>> utility.drop_collection(\"hello_milvus\")\n>>>\n",">>> milvus.stop()\nto clean up, run:\n(Linux system only) export LD_PRELOAD=\n(on Linux) export LD_LIBRARY_PATH=\n(on MacOS) export DYLD_FALLBACK_LIBRARY_PATH=\n>>>\n>>> exit()\n"],"headingContent":"","anchorList":[{"label":"Install Embedded Milvus","href":"Install-Embedded-Milvus","type":1,"isActive":false},{"label":"Prerequisites","href":"Prerequisites","type":2,"isActive":false},{"label":"Install embedded Milvus","href":"Install-embedded-Milvus","type":2,"isActive":false},{"label":"Start embedded Milvus","href":"Start-embedded-Milvus","type":2,"isActive":false},{"label":"Play with embedded Milvus","href":"Play-with-embedded-Milvus","type":2,"isActive":false},{"label":"Stop embedded Milvus and clean up the data","href":"Stop-embedded-Milvus-and-clean-up-the-data","type":2,"isActive":false},{"label":"What's next","href":"Whats-next","type":2,"isActive":false}]}