{"codeList":["{\n      'title': 'The Reported Mortality Rate of Coronavirus Is Not Important', \n      'title_vector': [0.041732933, 0.013779674, -0.027564144, ..., 0.030096486], \n      'article_meta': {\n        'link': 'https://medium.com/swlh/the-reported-mortality-rate-of-coronavirus-is-not-important-369989c8d912', \n        'reading_time': 13, \n        'publication': 'The Startup', \n        'claps': 1100, \n        'responses': 18\n      }\n}\n","import json\nimport pandas as pd\n\ndf = pd.read_csv('New_Medium_Data.csv')\ndf.to_json('New_Medium_Data.json', orient='records')\n\ndef m(row):\n    row.update({\n        'title_vector': list(map(float, row['title_vector'][1:-1].split(', '))),\n        'article_meta': {\n            'link': row.pop('link'),\n            'reading_time': row.pop('reading_time'),\n            'publication': row.pop('publication'),\n            'claps': row.pop('claps'),\n            'responses': row.pop('responses'),\n        }\n    })\n    return row\n\nwith open('New_Medium_Data.json') as f:\n    data_rows = json.load(f)\n    data_rows = map(m, data_rows)\n    data_rows = list(data_rows)\n","import json\nfrom pymilvus import connections, Collection, FieldSchema, CollectionSchema, DataType\n\nconnections.connect(host='localhost', port='19530')\n\n# 1. define fields\nfields = [\n    FieldSchema(name=\"id\", dtype=DataType.INT64, is_primary=True, auto_id=True, max_length=100),\n    FieldSchema(name=\"title\", dtype=DataType.VARCHAR, max_length=512),\n    FieldSchema(name=\"title_vector\", dtype=DataType.FLOAT_VECTOR, dim=768),\n    FieldSchema(name=\"article_meta\", dtype=DataType.JSON),\n]\n# 2. disable dynamic schema in schema definition\nschema = CollectionSchema(\n        fields, \n        \"The schema for a medium news collection\", \n        enable_dynamic_field=False # Optional, defaults to 'False'.\n)\n# 3. reference the schema in a collection\ncollection = Collection(\"medium_articles_with_json\", schema)\n\n# 4. index the vector field and load the collection\nindex_params = {\n    \"index_type\": \"AUTOINDEX\",\n    \"metric_type\": \"L2\",\n    \"params\": {}\n}\n\ncollection.create_index(\n  field_name=\"title_vector\", \n  index_params=index_params\n)\n\n# 5. load the collection\ncollection.load()\n","\n# You can directly insert the record listed at the top of this page into the collection\n\n# 5. insert data\ncollection.insert(data_rows)\n\n# Call the flush API to make inserted data immediately available for search\ncollection.flush()\n\nprint(\"Entity counts: \", collection.num_entities)\n\n# Output\n# Entity counts:  5979\n","# 6. search data\nresult = collection.search(\n    data=[data_rows[0]['title_vector']],\n    anns_field=\"title_vector\",\n    param={\"metric_type\": \"L2\", \"params\": {\"nprobe\": 10}},\n    limit=3,\n    expr='article_meta[\"claps\"] > 30 and article_meta[\"reading_time\"] < 10',\n    output_fields=[\"title\", \"article_meta\" ],\n)\n\nfor hits in result:\n    print(\"Matched IDs: \", hits.ids)\n    print(\"Distance to the query vector: \", hits.distances)\n    print(\"Matched articles: \")\n    for hit in hits:\n        print(\n            \"Title: \", \n            hit.entity.get(\"title\"), \n            \", Reading time: \", \n            hit.entity.get(\"article_meta\")['reading_time'], \n            \", Claps\", \n            hit.entity.get(\"article_meta\")['claps']\n        )\n\n# Output:\n# Matched articles: \n# Title:  The Hidden Side Effect of the Coronavirus , Reading time:  8 , Claps 83\n# Title:  Why The Coronavirus Mortality Rate is Misleading , Reading time:  9 , Claps 2900\n# Title:  Coronavirus shows what ethical Amazon could look like , Reading time:  4 , Claps 51\n","rows = [\n    { \"x\": [1,2,3,4] }\n]\n","collection.insert(rows)\n\nexpr = \"json_contains(x, 2)\"\n\ncollection.search(query_vector, \"vector\", search_params, limit=1, expr=expr)\n"],"headingContent":"","anchorList":[{"label":"JavaScript Object Notation (JSON)","href":"JavaScript-Object-Notation-JSON","type":1,"isActive":false},{"label":"Define JSON field","href":"Define-JSON-field","type":2,"isActive":false},{"label":"Insert Field Values","href":"Insert-Field-Values","type":2,"isActive":false},{"label":"Search within JSON field","href":"Search-within-JSON-field","type":2,"isActive":false},{"label":"Limits","href":"Limits","type":2,"isActive":false},{"label":"What's next","href":"Whats-next","type":2,"isActive":false}]}