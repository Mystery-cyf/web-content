{"codeList":["{\n\n        'title': 'The Reported Mortality Rate of Coronavirus Is Not Important',\n        'title_vector': [0.041732933, 0.013779674, -0.027564144, ..., 0.030096486],\n        'var_array': ['https://medium.com/swlh/the-reported-mortality-rate-of-coronavirus-is-not-important-369989c8d912', 'The Startup'],\n        'int_array': [13, 1100, 18]\n\n}\n","import pandas as pd\n\n# Load the first 100 entities of the downloaded dataset\ndf = pd.read_csv('New_Medium_Data.csv', nrows=100)\nfor i in range(100):\n    df['title_vector'][i] = eval(df['title_vector'][i])\n\n# Convert the specified fields into arrays\ndf['var_array'] = df[['link', 'publication']].values.tolist()\ndf['int_array'] = df[['reading_time', 'claps', 'responses']].values.tolist()\n\n# Drop the original columns\ndf = df.drop(columns=['link', 'publication', 'reading_time', 'claps', 'responses'])\n\n# Convert the DataFrame to a list of dictionaries\ndata = df.to_dict('records')\n","# Define array fields\n\nfrom pymilvus import connections, Collection, FieldSchema, CollectionSchema, DataType\n\nconnections.connect(host='localhost', port='19530')\n\n# 1. define fields\nfields = [\n    FieldSchema(name='id', dtype=DataType.INT64, is_primary=True, auto_id=False, max_length=100),\n    FieldSchema(name='title', dtype=DataType.VARCHAR, max_length=512),\n    FieldSchema(name='title_vector', dtype=DataType.FLOAT_VECTOR, dim=768),\n    # define ARRAY field with VARCHAR elements\n    FieldSchema(name='var_array', dtype=DataType.ARRAY, element_type=DataType.VARCHAR, max_capacity=900, max_length=1000),\n    # define ARRAY field with INT64 elements\n    FieldSchema(name='int_array', dtype=DataType.ARRAY, element_type=DataType.INT64, max_capacity=900)\n]\n\n# 2. enable dynamic schema in schema definition\nschema = CollectionSchema(\n        fields, \n        \"The schema for a medium news collection\", \n        enable_dynamic_field=True # Optional, defaults to 'False'.\n)\n\n# 3. reference the schema in a collection\ncollection = Collection(\"medium_articles_with_array\", schema)\n\n# 4. index the vector field\nindex_params = {\n    \"index_type\": \"AUTOINDEX\",\n    \"metric_type\": \"L2\",\n    \"params\": {}\n}\n\ncollection.create_index(\n  field_name=\"title_vector\", \n  index_params=index_params\n)\n\n# 5. load the collection\ncollection.load()\n","# Insert field values\n\n# 1. insert data\ncollection.insert(data)\n\n# 2. call the flush API to make inserted data immediately available for search\ncollection.flush()\n\nprint(\"Entity counts: \", collection.num_entities)\n\n# Output\n# Entity counts:  100\n","# 1. search data with `int_array`\nresult = collection.search(\n    data=data[0]['title_vector'],\n    anns_field='title_vector',\n    param={\"metric_type\": \"L2\", \"params\": {\"nprobe\": 10}},\n    limit=3,\n    expr='10 < int_array[0] < 20',\n    output_fields=['title','int_array']\n)\n\nfor hits in result:\n    print(\"Matched IDs: \", hits.ids)\n    print(\"Distance to the query vector: \", hits.distances)\n    print(\"Matched articles: \")\n    for hit in hits:\n        print(\n            \"Title: \", \n            hit.entity.get(\"title\"), \n            \", Reading time: \", \n            hit.entity.get(\"int_array\")[0]\n        )\n","# 2. query data with `var_array`\nresult = collection.query(\n    expr='var_array[1] == \"The Startup\"',\n    output_fields=['title','var_array']\n)\n\nfor hits in result:\n    print(\"Matched IDs: \", hits.id)\n    print(\"Matched articles: \")\n    for hit in hits:\n        print(\n            \"Title: \",\n            hit.entity.get(\"title\"),\n            \", Publication: \",\n            hit.entity.get(\"var_array\")[1]\n        )\n","# 3. use array_contains to check whether an array contains a specific element\n\ncollection.query(\n    expr='array_contains(int_array, 10)',\n    output_fields=['title','int_array']\n)\n"],"headingContent":"","anchorList":[{"label":"Array","href":"Array","type":1,"isActive":false},{"label":"Define array fields","href":"Define-array-fields","type":2,"isActive":false},{"label":"Insert field values","href":"Insert-field-values","type":2,"isActive":false},{"label":"Search or query with array fields","href":"Search-or-query-with-array-fields","type":2,"isActive":false},{"label":"Limits","href":"Limits","type":2,"isActive":false},{"label":"What’s next","href":"What’s-next","type":2,"isActive":false}]}