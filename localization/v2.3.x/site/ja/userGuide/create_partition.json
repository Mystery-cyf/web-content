{"codeList":["from pymilvus import Collection\ncollection = Collection(\"book\")      # Get an existing collection.\ncollection.create_partition(\"novel\")\n","await milvusClient.createPartition({\n  collection_name: \"book\",\n  partition_name: \"novel\",\n});\n","err := milvusClient.CreatePartition(\n  context.Background(),   // ctx\n  \"book\",                 // CollectionName\n  \"novel\",                // partitionName\n)\nif err != nil {\n  log.Fatal(\"failed to create partition:\", err.Error())\n}\n","milvusClient.createPartition(\n  CreatePartitionParam.newBuilder()\n    .withCollectionName(\"book\")\n    .withPartitionName(\"novel\")\n    .build()\n);\n","create partition -c book -p novel\n","curl -X 'POST' \\\n  'http://localhost:9091/api/v1/partition' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"collection_name\": \"book\",\n    \"partition_name\": \"novel\"\n  }'\n"],"headingContent":"","anchorList":[{"label":"Create a Partition","href":"Create-a-Partition","type":1,"isActive":false},{"label":"Limits","href":"Limits","type":2,"isActive":false},{"label":"What's next","href":"Whats-next","type":2,"isActive":false}]}