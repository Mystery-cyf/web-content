{"codeList":["from pymilvus import Collection, utility\n\n# Get an existing collection.\ncollection = Collection(\"book\")      \ncollection.load(replica_number=2)\n\n# Check the loading progress and loading status\nutility.load_state(\"book\")\n# Output: <LoadState: Loaded>\n\nutility.loading_progress(\"book\")\n# Output: {'loading_progress': 100%}\n","await milvusClient.loadCollection({\n  collection_name: \"book\",\n});\n\n\n","err := milvusClient.LoadCollection(\n  context.Background(),   // ctx\n  \"book\",                 // CollectionName\n  false,                  // async\n)\nif err != nil {\n  log.Fatal(\"failed to load collection:\", err.Error())\n}\n\n// To get the load status\nloadStatus, err := milvusClient.GetLoadState(\n  context.Background(),             // ctx\n  \"book\",                           // CollectionName\n  []string{\"Default partition\"},    // List of partitions\n)\nif err != nil {\n    log.Fatal(\"failed to get the load state\", err.Error())\n}\n\n// To get the loading progress\npercentage, err := milvusClient.GetLoadingProgress(\n    context.Background(),           // ctx\n    \"book\",                         // CollectionName\n    []string{\"Default partition\"},  // List of partitions\n)\nif err != nil {\n    log.Fatal(\"failed to get the loading progress\", err.Error())\n}\n","milvusClient.loadCollection(\n  LoadCollectionParam.newBuilder()\n    .withCollectionName(\"book\")\n    .build()\n);\n\n// You can check the loading status \n\nGetLoadStateParam param = GetLoadStateParam.newBuilder()\n        .withCollectionName(collectionName)\n        .build();\nR<GetLoadStateResponse> response = client.getLoadState(param);\nif (response.getStatus() != R.Status.Success.getCode()) {\n    System.out.println(response.getMessage());\n}\nSystem.out.println(response.getState());\n\n// and loading progress as well\n\nGetLoadingProgressParam param = GetLoadingProgressParam.newBuilder()\n        .withCollectionName(collectionName)\n        .build();\nR<GetLoadingProgressResponse> response = client.getLoadingProgress(param);\nif (response.getStatus() != R.Status.Success.getCode()) {\n    System.out.println(response.getMessage());\n}\nSystem.out.println(response.getProgress());\n","curl -X 'POST' \\\n  'http://localhost:9091/api/v1/collection/load' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"collection_name\": \"book\"\n  }'\n","{}\n","from pymilvus import Collection\ncollection = Collection(\"book\")      # Get an existing collection.\ncollection.load(replica_number=2)    # Load collection as 2 replicas\nresult = collection.get_replicas()\nprint(result)\n","Replica groups:\n- Group: <group_id:435309823872729305>, <group_nodes:(21, 20)>, <shards:[Shard: <channel_name:milvus-zong-rootcoord-dml_27_435367661874184193v0>, <shard_leader:21>, <shard_nodes:[21]>, Shard: <channel_name:milvus-zong-rootcoord-dml_28_435367661874184193v1>, <shard_leader:20>, <shard_nodes:[20, 21]>]>\n- Group: <group_id:435309823872729304>, <group_nodes:(25,)>, <shards:[Shard: <channel_name:milvus-zong-rootcoord-dml_28_435367661874184193v1>, <shard_leader:25>, <shard_nodes:[25]>, Shard: <channel_name:milvus-zong-rootcoord-dml_27_435367661874184193v0>, <shard_leader:25>, <shard_nodes:[25]>]>\n"],"headingContent":"","anchorList":[{"label":"Load a Collection","href":"Load-a-Collection","type":1,"isActive":false},{"label":"Get replica information","href":"Get-replica-information","type":2,"isActive":false},{"label":"Constraints","href":"Constraints","type":2,"isActive":false},{"label":"What's next","href":"Whats-next","type":2,"isActive":false}]}